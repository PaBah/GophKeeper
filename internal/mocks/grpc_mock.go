// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/paulbahush/projects/yp/GophKeeper/internal/gen/proto/gophkeeper/v1/service_grpc.pb.go

// Package mock_proto is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	v1 "github.com/PaBah/GophKeeper/internal/gen/proto/gophkeeper/v1"
	"go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockGophKeeperServiceClient is a mock of GophKeeperServiceClient interface.
type MockGophKeeperServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperServiceClientMockRecorder
}

// MockGophKeeperServiceClientMockRecorder is the mock recorder for MockGophKeeperServiceClient.
type MockGophKeeperServiceClientMockRecorder struct {
	mock *MockGophKeeperServiceClient
}

// NewMockGophKeeperServiceClient creates a new mock instance.
func NewMockGophKeeperServiceClient(ctrl *gomock.Controller) *MockGophKeeperServiceClient {
	mock := &MockGophKeeperServiceClient{ctrl: ctrl}
	mock.recorder = &MockGophKeeperServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperServiceClient) EXPECT() *MockGophKeeperServiceClientMockRecorder {
	return m.recorder
}

// CreateCard mocks base method.
func (m *MockGophKeeperServiceClient) CreateCard(ctx context.Context, in *v1.CreateCardRequest, opts ...grpc.CallOption) (*v1.CreateCardResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateCard", varargs...)
	ret0, _ := ret[0].(*v1.CreateCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCard indicates an expected call of CreateCard.
func (mr *MockGophKeeperServiceClientMockRecorder) CreateCard(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).CreateCard), varargs...)
}

// CreateCredentials mocks base method.
func (m *MockGophKeeperServiceClient) CreateCredentials(ctx context.Context, in *v1.CreateCredentialsRequest, opts ...grpc.CallOption) (*v1.CreateCredentialsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateCredentials", varargs...)
	ret0, _ := ret[0].(*v1.CreateCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCredentials indicates an expected call of CreateCredentials.
func (mr *MockGophKeeperServiceClientMockRecorder) CreateCredentials(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCredentials", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).CreateCredentials), varargs...)
}

// DeleteCard mocks base method.
func (m *MockGophKeeperServiceClient) DeleteCard(ctx context.Context, in *v1.DeleteCardRequest, opts ...grpc.CallOption) (*v1.DeleteCardResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteCard", varargs...)
	ret0, _ := ret[0].(*v1.DeleteCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCard indicates an expected call of DeleteCard.
func (mr *MockGophKeeperServiceClientMockRecorder) DeleteCard(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).DeleteCard), varargs...)
}

// DeleteCredentials mocks base method.
func (m *MockGophKeeperServiceClient) DeleteCredentials(ctx context.Context, in *v1.DeleteCredentialsRequest, opts ...grpc.CallOption) (*v1.DeleteCredentialsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteCredentials", varargs...)
	ret0, _ := ret[0].(*v1.DeleteCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCredentials indicates an expected call of DeleteCredentials.
func (mr *MockGophKeeperServiceClientMockRecorder) DeleteCredentials(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCredentials", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).DeleteCredentials), varargs...)
}

// DeleteFile mocks base method.
func (m *MockGophKeeperServiceClient) DeleteFile(ctx context.Context, in *v1.DeleteFileRequest, opts ...grpc.CallOption) (*v1.DeleteFileResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteFile", varargs...)
	ret0, _ := ret[0].(*v1.DeleteFileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockGophKeeperServiceClientMockRecorder) DeleteFile(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).DeleteFile), varargs...)
}

// DownloadFile mocks base method.
func (m *MockGophKeeperServiceClient) DownloadFile(ctx context.Context, in *v1.DownloadFileRequest, opts ...grpc.CallOption) (v1.GophKeeperService_DownloadFileClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DownloadFile", varargs...)
	ret0, _ := ret[0].(v1.GophKeeperService_DownloadFileClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadFile indicates an expected call of DownloadFile.
func (mr *MockGophKeeperServiceClientMockRecorder) DownloadFile(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadFile", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).DownloadFile), varargs...)
}

// GetCards mocks base method.
func (m *MockGophKeeperServiceClient) GetCards(ctx context.Context, in *v1.GetCardsRequest, opts ...grpc.CallOption) (*v1.GetCardsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCards", varargs...)
	ret0, _ := ret[0].(*v1.GetCardsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCards indicates an expected call of GetCards.
func (mr *MockGophKeeperServiceClientMockRecorder) GetCards(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCards", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).GetCards), varargs...)
}

// GetCredentials mocks base method.
func (m *MockGophKeeperServiceClient) GetCredentials(ctx context.Context, in *v1.GetCredentialsRequest, opts ...grpc.CallOption) (*v1.GetCredentialsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCredentials", varargs...)
	ret0, _ := ret[0].(*v1.GetCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredentials indicates an expected call of GetCredentials.
func (mr *MockGophKeeperServiceClientMockRecorder) GetCredentials(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).GetCredentials), varargs...)
}

// GetFiles mocks base method.
func (m *MockGophKeeperServiceClient) GetFiles(ctx context.Context, in *v1.GetFilesRequest, opts ...grpc.CallOption) (*v1.GetFilesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetFiles", varargs...)
	ret0, _ := ret[0].(*v1.GetFilesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFiles indicates an expected call of GetFiles.
func (mr *MockGophKeeperServiceClientMockRecorder) GetFiles(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFiles", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).GetFiles), varargs...)
}

// SignIn mocks base method.
func (m *MockGophKeeperServiceClient) SignIn(ctx context.Context, in *v1.SignInRequest, opts ...grpc.CallOption) (*v1.SignInResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SignIn", varargs...)
	ret0, _ := ret[0].(*v1.SignInResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignIn indicates an expected call of SignIn.
func (mr *MockGophKeeperServiceClientMockRecorder) SignIn(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).SignIn), varargs...)
}

// SignUp mocks base method.
func (m *MockGophKeeperServiceClient) SignUp(ctx context.Context, in *v1.SignUpRequest, opts ...grpc.CallOption) (*v1.SignUpResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SignUp", varargs...)
	ret0, _ := ret[0].(*v1.SignUpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUp indicates an expected call of SignUp.
func (mr *MockGophKeeperServiceClientMockRecorder) SignUp(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).SignUp), varargs...)
}

// SubscribeToChanges mocks base method.
func (m *MockGophKeeperServiceClient) SubscribeToChanges(ctx context.Context, in *v1.SubscribeToChangesRequest, opts ...grpc.CallOption) (v1.GophKeeperService_SubscribeToChangesClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SubscribeToChanges", varargs...)
	ret0, _ := ret[0].(v1.GophKeeperService_SubscribeToChangesClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SubscribeToChanges indicates an expected call of SubscribeToChanges.
func (mr *MockGophKeeperServiceClientMockRecorder) SubscribeToChanges(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeToChanges", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).SubscribeToChanges), varargs...)
}

// UpdateCard mocks base method.
func (m *MockGophKeeperServiceClient) UpdateCard(ctx context.Context, in *v1.UpdateCardRequest, opts ...grpc.CallOption) (*v1.UpdateCardResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateCard", varargs...)
	ret0, _ := ret[0].(*v1.UpdateCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCard indicates an expected call of UpdateCard.
func (mr *MockGophKeeperServiceClientMockRecorder) UpdateCard(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCard", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).UpdateCard), varargs...)
}

// UpdateCredentials mocks base method.
func (m *MockGophKeeperServiceClient) UpdateCredentials(ctx context.Context, in *v1.UpdateCredentialsRequest, opts ...grpc.CallOption) (*v1.UpdateCredentialsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateCredentials", varargs...)
	ret0, _ := ret[0].(*v1.UpdateCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCredentials indicates an expected call of UpdateCredentials.
func (mr *MockGophKeeperServiceClientMockRecorder) UpdateCredentials(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCredentials", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).UpdateCredentials), varargs...)
}

// UploadFile mocks base method.
func (m *MockGophKeeperServiceClient) UploadFile(ctx context.Context, opts ...grpc.CallOption) (v1.GophKeeperService_UploadFileClient, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UploadFile", varargs...)
	ret0, _ := ret[0].(v1.GophKeeperService_UploadFileClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockGophKeeperServiceClientMockRecorder) UploadFile(ctx interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockGophKeeperServiceClient)(nil).UploadFile), varargs...)
}

// MockGophKeeperServiceServer is a mock of GophKeeperServiceServer interface.
type MockGophKeeperServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperServiceServerMockRecorder
}

// MockGophKeeperServiceServerMockRecorder is the mock recorder for MockGophKeeperServiceServer.
type MockGophKeeperServiceServerMockRecorder struct {
	mock *MockGophKeeperServiceServer
}

// NewMockGophKeeperServiceServer creates a new mock instance.
func NewMockGophKeeperServiceServer(ctrl *gomock.Controller) *MockGophKeeperServiceServer {
	mock := &MockGophKeeperServiceServer{ctrl: ctrl}
	mock.recorder = &MockGophKeeperServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperServiceServer) EXPECT() *MockGophKeeperServiceServerMockRecorder {
	return m.recorder
}

// CreateCard mocks base method.
func (m *MockGophKeeperServiceServer) CreateCard(arg0 context.Context, arg1 *v1.CreateCardRequest) (*v1.CreateCardResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCard", arg0, arg1)
	ret0, _ := ret[0].(*v1.CreateCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCard indicates an expected call of CreateCard.
func (mr *MockGophKeeperServiceServerMockRecorder) CreateCard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).CreateCard), arg0, arg1)
}

// CreateCredentials mocks base method.
func (m *MockGophKeeperServiceServer) CreateCredentials(arg0 context.Context, arg1 *v1.CreateCredentialsRequest) (*v1.CreateCredentialsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCredentials", arg0, arg1)
	ret0, _ := ret[0].(*v1.CreateCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCredentials indicates an expected call of CreateCredentials.
func (mr *MockGophKeeperServiceServerMockRecorder) CreateCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCredentials", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).CreateCredentials), arg0, arg1)
}

// DeleteCard mocks base method.
func (m *MockGophKeeperServiceServer) DeleteCard(arg0 context.Context, arg1 *v1.DeleteCardRequest) (*v1.DeleteCardResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCard", arg0, arg1)
	ret0, _ := ret[0].(*v1.DeleteCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCard indicates an expected call of DeleteCard.
func (mr *MockGophKeeperServiceServerMockRecorder) DeleteCard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).DeleteCard), arg0, arg1)
}

// DeleteCredentials mocks base method.
func (m *MockGophKeeperServiceServer) DeleteCredentials(arg0 context.Context, arg1 *v1.DeleteCredentialsRequest) (*v1.DeleteCredentialsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCredentials", arg0, arg1)
	ret0, _ := ret[0].(*v1.DeleteCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCredentials indicates an expected call of DeleteCredentials.
func (mr *MockGophKeeperServiceServerMockRecorder) DeleteCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCredentials", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).DeleteCredentials), arg0, arg1)
}

// DeleteFile mocks base method.
func (m *MockGophKeeperServiceServer) DeleteFile(arg0 context.Context, arg1 *v1.DeleteFileRequest) (*v1.DeleteFileResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", arg0, arg1)
	ret0, _ := ret[0].(*v1.DeleteFileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockGophKeeperServiceServerMockRecorder) DeleteFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).DeleteFile), arg0, arg1)
}

// DownloadFile mocks base method.
func (m *MockGophKeeperServiceServer) DownloadFile(arg0 *v1.DownloadFileRequest, arg1 v1.GophKeeperService_DownloadFileServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadFile indicates an expected call of DownloadFile.
func (mr *MockGophKeeperServiceServerMockRecorder) DownloadFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadFile", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).DownloadFile), arg0, arg1)
}

// GetCards mocks base method.
func (m *MockGophKeeperServiceServer) GetCards(arg0 context.Context, arg1 *v1.GetCardsRequest) (*v1.GetCardsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCards", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetCardsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCards indicates an expected call of GetCards.
func (mr *MockGophKeeperServiceServerMockRecorder) GetCards(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCards", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).GetCards), arg0, arg1)
}

// GetCredentials mocks base method.
func (m *MockGophKeeperServiceServer) GetCredentials(arg0 context.Context, arg1 *v1.GetCredentialsRequest) (*v1.GetCredentialsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredentials", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredentials indicates an expected call of GetCredentials.
func (mr *MockGophKeeperServiceServerMockRecorder) GetCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).GetCredentials), arg0, arg1)
}

// GetFiles mocks base method.
func (m *MockGophKeeperServiceServer) GetFiles(arg0 context.Context, arg1 *v1.GetFilesRequest) (*v1.GetFilesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFiles", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetFilesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFiles indicates an expected call of GetFiles.
func (mr *MockGophKeeperServiceServerMockRecorder) GetFiles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFiles", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).GetFiles), arg0, arg1)
}

// SignIn mocks base method.
func (m *MockGophKeeperServiceServer) SignIn(arg0 context.Context, arg1 *v1.SignInRequest) (*v1.SignInResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignIn", arg0, arg1)
	ret0, _ := ret[0].(*v1.SignInResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignIn indicates an expected call of SignIn.
func (mr *MockGophKeeperServiceServerMockRecorder) SignIn(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).SignIn), arg0, arg1)
}

// SignUp mocks base method.
func (m *MockGophKeeperServiceServer) SignUp(arg0 context.Context, arg1 *v1.SignUpRequest) (*v1.SignUpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUp", arg0, arg1)
	ret0, _ := ret[0].(*v1.SignUpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUp indicates an expected call of SignUp.
func (mr *MockGophKeeperServiceServerMockRecorder) SignUp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).SignUp), arg0, arg1)
}

// SubscribeToChanges mocks base method.
func (m *MockGophKeeperServiceServer) SubscribeToChanges(arg0 *v1.SubscribeToChangesRequest, arg1 v1.GophKeeperService_SubscribeToChangesServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeToChanges", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubscribeToChanges indicates an expected call of SubscribeToChanges.
func (mr *MockGophKeeperServiceServerMockRecorder) SubscribeToChanges(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeToChanges", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).SubscribeToChanges), arg0, arg1)
}

// UpdateCard mocks base method.
func (m *MockGophKeeperServiceServer) UpdateCard(arg0 context.Context, arg1 *v1.UpdateCardRequest) (*v1.UpdateCardResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCard", arg0, arg1)
	ret0, _ := ret[0].(*v1.UpdateCardResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCard indicates an expected call of UpdateCard.
func (mr *MockGophKeeperServiceServerMockRecorder) UpdateCard(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCard", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).UpdateCard), arg0, arg1)
}

// UpdateCredentials mocks base method.
func (m *MockGophKeeperServiceServer) UpdateCredentials(arg0 context.Context, arg1 *v1.UpdateCredentialsRequest) (*v1.UpdateCredentialsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCredentials", arg0, arg1)
	ret0, _ := ret[0].(*v1.UpdateCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCredentials indicates an expected call of UpdateCredentials.
func (mr *MockGophKeeperServiceServerMockRecorder) UpdateCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCredentials", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).UpdateCredentials), arg0, arg1)
}

// UploadFile mocks base method.
func (m *MockGophKeeperServiceServer) UploadFile(arg0 v1.GophKeeperService_UploadFileServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockGophKeeperServiceServerMockRecorder) UploadFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).UploadFile), arg0)
}

// mustEmbedUnimplementedGophKeeperServiceServer mocks base method.
func (m *MockGophKeeperServiceServer) mustEmbedUnimplementedGophKeeperServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGophKeeperServiceServer")
}

// mustEmbedUnimplementedGophKeeperServiceServer indicates an expected call of mustEmbedUnimplementedGophKeeperServiceServer.
func (mr *MockGophKeeperServiceServerMockRecorder) mustEmbedUnimplementedGophKeeperServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGophKeeperServiceServer", reflect.TypeOf((*MockGophKeeperServiceServer)(nil).mustEmbedUnimplementedGophKeeperServiceServer))
}

// MockUnsafeGophKeeperServiceServer is a mock of UnsafeGophKeeperServiceServer interface.
type MockUnsafeGophKeeperServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeGophKeeperServiceServerMockRecorder
}

// MockUnsafeGophKeeperServiceServerMockRecorder is the mock recorder for MockUnsafeGophKeeperServiceServer.
type MockUnsafeGophKeeperServiceServerMockRecorder struct {
	mock *MockUnsafeGophKeeperServiceServer
}

// NewMockUnsafeGophKeeperServiceServer creates a new mock instance.
func NewMockUnsafeGophKeeperServiceServer(ctrl *gomock.Controller) *MockUnsafeGophKeeperServiceServer {
	mock := &MockUnsafeGophKeeperServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeGophKeeperServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeGophKeeperServiceServer) EXPECT() *MockUnsafeGophKeeperServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedGophKeeperServiceServer mocks base method.
func (m *MockUnsafeGophKeeperServiceServer) mustEmbedUnimplementedGophKeeperServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGophKeeperServiceServer")
}

// mustEmbedUnimplementedGophKeeperServiceServer indicates an expected call of mustEmbedUnimplementedGophKeeperServiceServer.
func (mr *MockUnsafeGophKeeperServiceServerMockRecorder) mustEmbedUnimplementedGophKeeperServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGophKeeperServiceServer", reflect.TypeOf((*MockUnsafeGophKeeperServiceServer)(nil).mustEmbedUnimplementedGophKeeperServiceServer))
}
