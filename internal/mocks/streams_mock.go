// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/paulbahush/projects/yp/GophKeeper/internal/mocks/stream_interfaces.go

// Package mock_mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	v1 "github.com/PaBah/GophKeeper/internal/gen/proto/gophkeeper/v1"
	"go.uber.org/mock/gomock"
	metadata "google.golang.org/grpc/metadata"
)

// MockMockServerStream is a mock of MockServerStream interface.
type MockMockServerStream struct {
	ctrl     *gomock.Controller
	recorder *MockMockServerStreamMockRecorder
}

// MockMockServerStreamMockRecorder is the mock recorder for MockMockServerStream.
type MockMockServerStreamMockRecorder struct {
	mock *MockMockServerStream
}

// NewMockMockServerStream creates a new mock instance.
func NewMockMockServerStream(ctrl *gomock.Controller) *MockMockServerStream {
	mock := &MockMockServerStream{ctrl: ctrl}
	mock.recorder = &MockMockServerStreamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockServerStream) EXPECT() *MockMockServerStreamMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockMockServerStream) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockMockServerStreamMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockMockServerStream)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockMockServerStream) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockMockServerStreamMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockMockServerStream)(nil).RecvMsg), m)
}

// SendHeader mocks base method.
func (m *MockMockServerStream) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockMockServerStreamMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockMockServerStream)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockMockServerStream) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockMockServerStreamMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockMockServerStream)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockMockServerStream) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockMockServerStreamMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockMockServerStream)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockMockServerStream) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockMockServerStreamMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockMockServerStream)(nil).SetTrailer), arg0)
}

// MockGophKeeperService_UploadFileClient is a mock of GophKeeperService_UploadFileClient interface.
type MockGophKeeperService_UploadFileClient struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_UploadFileClientMockRecorder
}

// MockGophKeeperService_UploadFileClientMockRecorder is the mock recorder for MockGophKeeperService_UploadFileClient.
type MockGophKeeperService_UploadFileClientMockRecorder struct {
	mock *MockGophKeeperService_UploadFileClient
}

// NewMockGophKeeperService_UploadFileClient creates a new mock instance.
func NewMockGophKeeperService_UploadFileClient(ctrl *gomock.Controller) *MockGophKeeperService_UploadFileClient {
	mock := &MockGophKeeperService_UploadFileClient{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_UploadFileClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_UploadFileClient) EXPECT() *MockGophKeeperService_UploadFileClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockGophKeeperService_UploadFileClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockGophKeeperService_UploadFileClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).Context))
}

// Header mocks base method.
func (m *MockGophKeeperService_UploadFileClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockGophKeeperService_UploadFileClient) Recv() (*v1.UploadFileResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*v1.UploadFileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_UploadFileClient) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockGophKeeperService_UploadFileClient) Send(request *v1.UploadFileRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", request)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) Send(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).Send), request)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_UploadFileClient) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockGophKeeperService_UploadFileClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockGophKeeperService_UploadFileClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockGophKeeperService_UploadFileClient)(nil).Trailer))
}

// MockGophKeeperService_SubscribeToChangesClient is a mock of GophKeeperService_SubscribeToChangesClient interface.
type MockGophKeeperService_SubscribeToChangesClient struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_SubscribeToChangesClientMockRecorder
}

// MockGophKeeperService_SubscribeToChangesClientMockRecorder is the mock recorder for MockGophKeeperService_SubscribeToChangesClient.
type MockGophKeeperService_SubscribeToChangesClientMockRecorder struct {
	mock *MockGophKeeperService_SubscribeToChangesClient
}

// NewMockGophKeeperService_SubscribeToChangesClient creates a new mock instance.
func NewMockGophKeeperService_SubscribeToChangesClient(ctrl *gomock.Controller) *MockGophKeeperService_SubscribeToChangesClient {
	mock := &MockGophKeeperService_SubscribeToChangesClient{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_SubscribeToChangesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_SubscribeToChangesClient) EXPECT() *MockGophKeeperService_SubscribeToChangesClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).Context))
}

// Header mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesClient) Recv() (*v1.SubscribeToChangesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*v1.SubscribeToChangesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_SubscribeToChangesClient) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).RecvMsg), m)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_SubscribeToChangesClient) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockGophKeeperService_SubscribeToChangesClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesClient)(nil).Trailer))
}

// MockGophKeeperService_DownloadFileClient is a mock of GophKeeperService_DownloadFileClient interface.
type MockGophKeeperService_DownloadFileClient struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_DownloadFileClientMockRecorder
}

// MockGophKeeperService_DownloadFileClientMockRecorder is the mock recorder for MockGophKeeperService_DownloadFileClient.
type MockGophKeeperService_DownloadFileClientMockRecorder struct {
	mock *MockGophKeeperService_DownloadFileClient
}

// NewMockGophKeeperService_DownloadFileClient creates a new mock instance.
func NewMockGophKeeperService_DownloadFileClient(ctrl *gomock.Controller) *MockGophKeeperService_DownloadFileClient {
	mock := &MockGophKeeperService_DownloadFileClient{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_DownloadFileClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_DownloadFileClient) EXPECT() *MockGophKeeperService_DownloadFileClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockGophKeeperService_DownloadFileClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockGophKeeperService_DownloadFileClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).Context))
}

// Header mocks base method.
func (m *MockGophKeeperService_DownloadFileClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockGophKeeperService_DownloadFileClient) Recv() (*v1.DownloadFileResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*v1.DownloadFileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_DownloadFileClient) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).RecvMsg), m)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_DownloadFileClient) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).SendMsg), m)
}

// Trailer mocks base method.
func (m *MockGophKeeperService_DownloadFileClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockGophKeeperService_DownloadFileClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockGophKeeperService_DownloadFileClient)(nil).Trailer))
}

// MockGophKeeperService_SubscribeToChangesServer is a mock of GophKeeperService_SubscribeToChangesServer interface.
type MockGophKeeperService_SubscribeToChangesServer struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_SubscribeToChangesServerMockRecorder
}

// MockGophKeeperService_SubscribeToChangesServerMockRecorder is the mock recorder for MockGophKeeperService_SubscribeToChangesServer.
type MockGophKeeperService_SubscribeToChangesServerMockRecorder struct {
	mock *MockGophKeeperService_SubscribeToChangesServer
}

// NewMockGophKeeperService_SubscribeToChangesServer creates a new mock instance.
func NewMockGophKeeperService_SubscribeToChangesServer(ctrl *gomock.Controller) *MockGophKeeperService_SubscribeToChangesServer {
	mock := &MockGophKeeperService_SubscribeToChangesServer{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_SubscribeToChangesServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_SubscribeToChangesServer) EXPECT() *MockGophKeeperService_SubscribeToChangesServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_SubscribeToChangesServer) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesServer) Send(arg0 *v1.SubscribeToChangesResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_SubscribeToChangesServer) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockGophKeeperService_SubscribeToChangesServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockGophKeeperService_SubscribeToChangesServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockGophKeeperService_SubscribeToChangesServer)(nil).SetTrailer), arg0)
}

// MockGophKeeperService_UploadFileServer is a mock of GophKeeperService_UploadFileServer interface.
type MockGophKeeperService_UploadFileServer struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_UploadFileServerMockRecorder
}

// MockGophKeeperService_UploadFileServerMockRecorder is the mock recorder for MockGophKeeperService_UploadFileServer.
type MockGophKeeperService_UploadFileServerMockRecorder struct {
	mock *MockGophKeeperService_UploadFileServer
}

// NewMockGophKeeperService_UploadFileServer creates a new mock instance.
func NewMockGophKeeperService_UploadFileServer(ctrl *gomock.Controller) *MockGophKeeperService_UploadFileServer {
	mock := &MockGophKeeperService_UploadFileServer{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_UploadFileServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_UploadFileServer) EXPECT() *MockGophKeeperService_UploadFileServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockGophKeeperService_UploadFileServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).Context))
}

// Recv mocks base method.
func (m *MockGophKeeperService_UploadFileServer) Recv() (*v1.UploadFileRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*v1.UploadFileRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).Recv))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_UploadFileServer) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockGophKeeperService_UploadFileServer) Send(arg0 *v1.UploadFileResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockGophKeeperService_UploadFileServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_UploadFileServer) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockGophKeeperService_UploadFileServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockGophKeeperService_UploadFileServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockGophKeeperService_UploadFileServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockGophKeeperService_UploadFileServer)(nil).SetTrailer), arg0)
}

// MockGophKeeperService_DownloadFileServer is a mock of GophKeeperService_DownloadFileServer interface.
type MockGophKeeperService_DownloadFileServer struct {
	ctrl     *gomock.Controller
	recorder *MockGophKeeperService_DownloadFileServerMockRecorder
}

// MockGophKeeperService_DownloadFileServerMockRecorder is the mock recorder for MockGophKeeperService_DownloadFileServer.
type MockGophKeeperService_DownloadFileServerMockRecorder struct {
	mock *MockGophKeeperService_DownloadFileServer
}

// NewMockGophKeeperService_DownloadFileServer creates a new mock instance.
func NewMockGophKeeperService_DownloadFileServer(ctrl *gomock.Controller) *MockGophKeeperService_DownloadFileServer {
	mock := &MockGophKeeperService_DownloadFileServer{ctrl: ctrl}
	mock.recorder = &MockGophKeeperService_DownloadFileServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophKeeperService_DownloadFileServer) EXPECT() *MockGophKeeperService_DownloadFileServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockGophKeeperService_DownloadFileServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m_2 *MockGophKeeperService_DownloadFileServer) RecvMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "RecvMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) RecvMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).RecvMsg), m)
}

// Send mocks base method.
func (m *MockGophKeeperService_DownloadFileServer) Send(arg0 *v1.DownloadFileResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockGophKeeperService_DownloadFileServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m_2 *MockGophKeeperService_DownloadFileServer) SendMsg(m any) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendMsg", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) SendMsg(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).SendMsg), m)
}

// SetHeader mocks base method.
func (m *MockGophKeeperService_DownloadFileServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockGophKeeperService_DownloadFileServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockGophKeeperService_DownloadFileServerMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockGophKeeperService_DownloadFileServer)(nil).SetTrailer), arg0)
}
